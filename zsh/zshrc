# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

######################
## basic zsh config ##

# Set vim keybinds first, so that all plugins know about it.
bindkey -v

# EDITOR is vim.
export EDITOR=vim

# Save each command's timestamp and duration.
setopt EXTENDED_HISTORY

# Expand '=command' as path of command
# e.g.) '=ls' -> '/bin/ls'
setopt EQUALS

# Incrementally append history instead of waiting for exit to write out.
setopt INC_APPEND_HISTORY

# Ignore duplicate commands.
setopt HIST_IGNORE_ALL_DUPS

# Ignore commands that start with a space.
setopt HIST_IGNORE_SPACE

# Reduce blanks in history.
setopt HIST_REDUCE_BLANKS

# Allow for history expansion.
setopt HIST_VERIFY

# Don't clobber files accidentally.
setopt NOCLOBBER

# Evaluate prompt each time it is shown. Allows embedding commands.
setopt PROMPT_SUBST

# Show command execution time stamp in history.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# long date format in ls(1)
# https://www.gnu.org/software/coreutils/manual/html_node/Formatting-file-timestamps.html
export TIME_STYLE=long-iso

######################
## oh-my-zsh config ##
export ZSH=$HOME/.dotfiles/oh-my-zsh

ZSH_THEME="powerlevel10k/powerlevel10k"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2

plugins=(
  adb
  alias-tips
  brew
  brew-cask
  common-aliases
  docker
  extract
  fasd
  git
  git-extras
  history
  kubectl
  osx
  shrink-path
  taskwarrior
  vscode
  yarn-autocompletions
  zsh-autosuggestions
  zsh-completions
)

PS1='%n@%m $(shrink_path -f)>'

DISABLE_AUTO_UPDATE=true

# oh-my-zsh/lib/key-bindings.zsh sets emacs mode, so we source and reset to vim
source $ZSH/oh-my-zsh.sh # note that this comes AFTER plugins sourced.
bindkey -v

##################################################
# Load custom config last, so it takes priority ##

find ~/.dotfiles/zsh/config ~/.dotfiles/zsh/aliases -type f -name '*.zsh' -print0 | sort -z |
  while IFS= read -r -d $'\0' line; do
    source "$line"
  done

# Enable all completions
autoload -U compinit && compinit

# Load local config if present, for final overrides.
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

# heroku autocomplete setup
# HEROKU_AC_ZSH_SETUP_PATH=/Users/liam/Library/Caches/heroku/autocomplete/zsh_setup &&
#  test -f $HEROKU_AC_ZSH_SETUP_PATH &&
#  source $HEROKU_AC_ZSH_SETUP_PATH

# fzf setup for autojump to work
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# brewfile management setup
if [ -f $(brew --prefix)/etc/brew-wrap ]; then
  source $(brew --prefix)/etc/brew-wrap
fi

# Source "nvm" but don't use any version yet
export NVM_DIR=/usr/local/Cellar/nvm/0.34.0 # $(brew --prefix nvm)
[ ! -r $NVM_DIR/nvm.sh ] || {
  . $NVM_DIR/nvm.sh --no-use

  # Call "nvm use" when entering a directory with a .nvmrc
  __jc_nvmrc_probe_dir=
  function __jc_nvmrc_probe() {
    [[ "$__jc_nvmrc_probe_dir" == "$PWD" ]] || [ ! -r .nvmrc ] || {
      __jc_nvmrc_probe_dir="$PWD"
      nvm use
    }
  }
  [[ "$PWD" == "$HOME" ]] || __jc_nvmrc_probe
  PROMPT_COMMAND="__jc_nvmrc_probe${PROMPT_COMMAND+;$PROMPT_COMMAND}"
}

# As per instructions, load this last so that it wraps ZLE widgets.
source ~/.dotfiles/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# source $HOME/.cargo/env

# tabtab source for packages
# uninstall by removing these lines
[[ -f ~/.config/tabtab/__tabtab.zsh ]] && . ~/.config/tabtab/__tabtab.zsh || true

export NVM_DIR="$HOME/.nvm"
[ -s "/usr/local/opt/nvm/nvm.sh" ] && . "/usr/local/opt/nvm/nvm.sh"  # This loads nvm
#[ -s "/usr/local/opt/nvm/etc/bash_completion.d/nvm" ] && . "/usr/local/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion

# Completion for kitty
kitty + complete setup zsh | source /dev/stdin

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh



# https://github.com/nicolashery/mac-dev-setup#virtualenv
if command -v pyenv 1>/dev/null 2>&1; then
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    eval "$(pyenv init --path)"
    eval "$(pyenv init -)"
fi

if which pyenv-virtualenv-init > /dev/null; then
  eval "$(pyenv virtualenv-init -)";
fi

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc' ]; then . '/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/usr/local/Caskroom/Desktop/google-cloud-sdk/completion.zsh.inc' ]; then . '/usr/local/Caskroom/google-cloud-sdk/completion.zsh.inc'; fi

if [ -e /Users/liam/.nix-profile/etc/profile.d/nix.sh ]; then . /Users/liam/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer

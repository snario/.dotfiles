######################
## basic zsh config ##

# Set vim keybinds first, so that all plugins know about it.
bindkey -v

# EDITOR is vim.
export EDITOR=vim
# Save each command's timestamp and duration.
setopt EXTENDED_HISTORY

# Expand '=command' as path of command
# e.g.) '=ls' -> '/bin/ls'
setopt EQUALS

# Incrementally append history instead of waiting for exit to write out.
setopt INC_APPEND_HISTORY

# Ignore duplicate commands.
setopt HIST_IGNORE_ALL_DUPS

# Ignore commands that start with a space.
setopt HIST_IGNORE_SPACE

# Reduce blanks in history.
setopt HIST_REDUCE_BLANKS

# Allow for history expansion.
setopt HIST_VERIFY

# Don't clobber files accidentally.
setopt NOCLOBBER

# Evaluate prompt each time it is shown. Allows embedding commands.
setopt PROMPT_SUBST

# Show command execution time stamp in history.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

# long date format in ls(1)
# https://www.gnu.org/software/coreutils/manual/html_node/Formatting-file-timestamps.html
export TIME_STYLE=long-iso

######################
## oh-my-zsh config ##
export ZSH=$HOME/.dotfiles/oh-my-zsh

ZSH_THEME="powerlevel9k/powerlevel9k"
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2

plugins=(
  adb
  alias-tips
  brew
  brew-cask
  common-aliases
  docker
  extract
  fasd
  git
  git-extras
  history
  osx
  shrink-path
  taskwarrior
  vscode
  zsh-autosuggestions
  zsh-completions
  zsh-completions
)

PS1='%n@%m $(shrink_path -f)>'

DISABLE_AUTO_UPDATE=true

# oh-my-zsh/lib/key-bindings.zsh sets emacs mode, so we source and reset to vim
source $ZSH/oh-my-zsh.sh # note that this comes AFTER plugins sourced.
bindkey -v

##################################################
# Load custom config last, so it takes priority ##

find ~/.dotfiles/zsh/config ~/.dotfiles/zsh/aliases -type f -name '*.zsh' -print0 | sort -z |
  while IFS= read -r -d $'\0' line; do
    source "$line"
  done

# Enable all completions
autoload -U compinit && compinit

# Load local config if present, for final overrides.
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"

# heroku autocomplete setup
HEROKU_AC_ZSH_SETUP_PATH=/Users/liam/Library/Caches/heroku/autocomplete/zsh_setup &&
  test -f $HEROKU_AC_ZSH_SETUP_PATH &&
  source $HEROKU_AC_ZSH_SETUP_PATH

# fzf setup for autojump to work
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# autojump
[ -f /usr/local/etc/profile.d/autojump.sh ] && . /usr/local/etc/profile.d/autojump.sh

# brewfile management setup
if [ -f $(brew --prefix)/etc/brew-wrap ]; then
  source $(brew --prefix)/etc/brew-wrap
fi

# Source "nvm" but don't use any version yet
export NVM_DIR=/usr/local/Cellar/nvm/0.34.0 # $(brew --prefix nvm)
[ ! -r $NVM_DIR/nvm.sh ] || {
  . $NVM_DIR/nvm.sh --no-use

  # Call "nvm use" when entering a directory with a .nvmrc
  __jc_nvmrc_probe_dir=
  function __jc_nvmrc_probe() {
    [[ "$__jc_nvmrc_probe_dir" == "$PWD" ]] || [ ! -r .nvmrc ] || {
      __jc_nvmrc_probe_dir="$PWD"
      nvm use
    }
  }
  [[ "$PWD" == "$HOME" ]] || __jc_nvmrc_probe
  PROMPT_COMMAND="__jc_nvmrc_probe${PROMPT_COMMAND+;$PROMPT_COMMAND}"
}

# As per instructions, load this last so that it wraps ZLE widgets.
source ~/.dotfiles/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
